openapi: 3.0.3
info:
  title: VMS API
  version: 1.0.0
  description: API for VMS
paths:
  /api/categories/:
    get:
      operationId: categories_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: categories_create
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/categories/{id}/:
    get:
      operationId: categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/free-trials/:
    get:
      operationId: free_trials_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - free-trials
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFreeTrialList'
          description: ''
    post:
      operationId: free_trials_create
      tags:
      - free-trials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreeTrial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FreeTrial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FreeTrial'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeTrial'
          description: ''
  /api/free-trials/{id}/:
    get:
      operationId: free_trials_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this free trial.
        required: true
      tags:
      - free-trials
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeTrial'
          description: ''
    put:
      operationId: free_trials_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this free trial.
        required: true
      tags:
      - free-trials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreeTrial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FreeTrial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FreeTrial'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeTrial'
          description: ''
    patch:
      operationId: free_trials_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this free trial.
        required: true
      tags:
      - free-trials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFreeTrial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFreeTrial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFreeTrial'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeTrial'
          description: ''
    delete:
      operationId: free_trials_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this free trial.
        required: true
      tags:
      - free-trials
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/pricings/:
    get:
      operationId: pricings_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - pricings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPricingList'
          description: ''
    post:
      operationId: pricings_create
      tags:
      - pricings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pricing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pricing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pricing'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pricing'
          description: ''
  /api/pricings/{id}/:
    get:
      operationId: pricings_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pricing.
        required: true
      tags:
      - pricings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pricing'
          description: ''
    put:
      operationId: pricings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pricing.
        required: true
      tags:
      - pricings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pricing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pricing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Pricing'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pricing'
          description: ''
    patch:
      operationId: pricings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pricing.
        required: true
      tags:
      - pricings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPricing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPricing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPricing'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pricing'
          description: ''
    delete:
      operationId: pricings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pricing.
        required: true
      tags:
      - pricings
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: products_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_create
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/reviews/:
    get:
      operationId: reviews_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: reviews_create
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/reviews/{id}/:
    get:
      operationId: reviews_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: reviews_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: reviews_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      tags:
      - reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: reviews_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      tags:
      - reviews
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        lft:
          type: integer
          readOnly: true
        rght:
          type: integer
          readOnly: true
        tree_id:
          type: integer
          readOnly: true
        level:
          type: integer
          readOnly: true
        parent:
          type: integer
          nullable: true
      required:
      - id
      - level
      - lft
      - name
      - rght
      - tree_id
    FreeTrial:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        is_active:
          type: boolean
      required:
      - duration
      - id
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedFreeTrialList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FreeTrial'
    PaginatedPricingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Pricing'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        lft:
          type: integer
          readOnly: true
        rght:
          type: integer
          readOnly: true
        tree_id:
          type: integer
          readOnly: true
        level:
          type: integer
          readOnly: true
        parent:
          type: integer
          nullable: true
    PatchedFreeTrial:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        is_active:
          type: boolean
    PatchedPricing:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        is_active:
          type: boolean
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        image_url:
          type: string
          maxLength: 2083
        description:
          type: string
        video_url:
          type: string
          maxLength: 2083
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 15
        link:
          type: string
          maxLength: 2083
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,1})?$
        file:
          type: string
          format: uri
        statistics: {}
        report_file:
          type: string
          format: uri
        is_deleted:
          type: boolean
        is_active:
          type: boolean
        category:
          type: integer
        pricing:
          type: integer
        free_trial:
          type: integer
    PatchedReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        review:
          type: string
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,1})?$
        product:
          type: integer
    Pricing:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        is_active:
          type: boolean
      required:
      - duration
      - id
      - price
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        image_url:
          type: string
          maxLength: 2083
        description:
          type: string
        video_url:
          type: string
          maxLength: 2083
        email:
          type: string
          format: email
          maxLength: 254
        phone:
          type: string
          maxLength: 15
        link:
          type: string
          maxLength: 2083
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,1})?$
        file:
          type: string
          format: uri
        statistics: {}
        report_file:
          type: string
          format: uri
        is_deleted:
          type: boolean
        is_active:
          type: boolean
        category:
          type: integer
        pricing:
          type: integer
        free_trial:
          type: integer
      required:
      - category
      - description
      - email
      - file
      - free_trial
      - id
      - image_url
      - link
      - name
      - phone
      - pricing
      - rating
      - report_file
      - statistics
      - video_url
    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
        review:
          type: string
        rating:
          type: string
          format: decimal
          pattern: ^-?\d{0,1}(?:\.\d{0,1})?$
        product:
          type: integer
      required:
      - email
      - id
      - name
      - product
      - rating
      - review
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
